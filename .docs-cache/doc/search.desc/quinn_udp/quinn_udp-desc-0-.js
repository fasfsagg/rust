searchState.loadedDescShard("quinn_udp", 0, "Uniform interface to send/recv UDP packets with ECN …\nNumber of UDP packets to send/receive at a time\nExplicit congestion notification codepoint\nAn outgoing packet\nA borrowed UDP socket\nQUIC-friendly UDP interface for Windows\nThe capabilities a UDP socket suppports on a certain …\nContents of the datagram\nConstructs a value with arbitrary fields, intended to be …\nThe socket this datagram should be sent to\nThe destination IP address which was encoded in this …\nExplicit congestion notification bits to set on the packet\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate new object from the given bits\nThe number of segments to read when GRO is enabled. Used …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum amount of segments which can be transmitted if …\nWhether transmitted datagrams might get fragmented by the …\nThe segment size if this transmission contains multiple …\nOptional source IP address for the datagram")